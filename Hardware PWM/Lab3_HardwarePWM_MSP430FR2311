#include <msp430.h>


/**
 * main.c
 */

int main(void)
{

    WDTCTL = WDTPW | WDTHOLD; //Watchdog disabled
    PM5CTL0 &= ~LOCKLPM5;  //Enables GPIO

    P2DIR |= BIT0;   // sets 2.0 as an output
    P2SEL0 |= BIT0;  //sets 2.0 to be used in the modulation
    P1OUT |= BIT0; //sets1.0 to start on
    P1DIR |= BIT0;//sets 1.0 as an output

    P1REN |= BIT1;//enables 1.1
    P1OUT |= BIT1;    //sets the pull down resistor

    P1IE |= BIT1;   //interrupt on 1.1
    P1IES |= BIT1;
    P1IFG &= ~BIT1;  //has clear flag at startup

    TB1CCTL1 = OUTMOD_7; //CCR1 reset/set
    TB1CCR0 = 1000;  //frequency that is counted up to
    TB1CCR1 = 500;  //makes the initial light start at 50% of the duty cycle
    TB1CTL = TBSSEL_2 + MC_1; //sets the clock as SMCLK in upmode without any division
    __enable_interrupt();
}

//button interrupt
#pragma vector=PORT1_VECTOR   //triggered interrupt on button press, 1.3
__interrupt void Port_1(void)
{

    if((P1IN & BIT1)==0)//if button is pressed
    {
        P1OUT ^= BIT0;//toggles 1.0 when button is pressed
            if (TB1CCR1<TB1CCR0)
            {
                TB1CCR1+=100; //adds to the duty cycle by 100Hz
            } else  {
                TB1CCR1 = 0;  //resets duty cylce to 0% once ccr1 = 1000
            }
    }
          P1IE |= BIT1;                     //reenables interrupt on the button
          P1IFG &= ~BIT1;                  //resets flags
}
