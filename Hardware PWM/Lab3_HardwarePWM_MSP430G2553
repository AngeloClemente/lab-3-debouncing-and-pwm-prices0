#include <msp430.h> 


/**
 * main.c
 */
int main(void)
{
    WDTCTL = WDTPW + WDTHOLD;   //Watchdog disabled
    BCSCTL3 = LFXT1S_2;   //Enables crystals in board
    P1DIR |= BIT6;      //sets 1.6 as an output
    P1DIR |= BIT0;//sets 1.0 as an output
    P1SEL |= BIT6;    //sets 1.6 to be used in the modulation
   P1OUT |= BIT0; //sets1.0 to start on

    P1OUT |= BIT3; //sets the pull down resistor

    P1REN |= BIT3;  //enables 1.3
    P1IE |= BIT3;    //interrupt on 1.3
    P1IES |= BIT3;

    CCR0 = 1000; //Frequency that is counted up to
    CCTL1 = OUTMOD_7;//c
    CCR1 = 500; //makes the initial light start at 50% of the duty cycle
    TACTL = TASSEL_2 + MC_1; //sets the clock as SMCLK in upmode without any division
    __enable_interrupt();
}

#pragma vector = PORT1_VECTOR //triggered interrupt on button press, 1.3
__interrupt void Port_1(void)
{
    if((P1IN & BIT3) == 0) //if button is pressed
    {
        P1OUT ^= BIT0;//toggles 1.0 when button is pressed
        if(CCR1 < CCR0)
        {
            CCR1 += 100; //adds to the duty cycle by 100Hz
        }
        else
        {
            CCR1 = 0; //resets duty cylce to 0% once ccr1 = 1000
        }
    }

    P1IFG &= ~BIT3; //resets flags
}
