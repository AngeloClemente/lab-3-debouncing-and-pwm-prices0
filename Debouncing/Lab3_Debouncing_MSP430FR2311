#include <msp430.h>

void main(void)
{
WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
PM5CTL0 &= ~LOCKLPM5;

P1DIR |= BIT0; // P1.0 as output
P1DIR &= ~BIT1; //sets p1.1 as an input

P1OUT |= BIT0; //starts p1.0 as on LED

P1IE |= BIT1; //enables the interrupt for p1.1
P1IES |= BIT1; //detects the falling edge

P1IFG &= ~BIT1; //clears the flag

P1REN |= BIT1; //pullup resistor is high for 1.1


TB0CTL=TBSSEL_1 + MC_1 + ID_3; //Makes Aclk in up mode with an 8 divider, on
TB0CCR0 = 819.2; //count to have led blink at
TB0CCTL0 |= CCIE; //enables the interrupt

_BIS_SR(LPM4_bits + GIE);

}
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    TB0CTL=TBSSEL_1 + MC_1 + ID_3; //Makes Aclk in up mode with an 8 divider, set up
    P1IE &=~BIT1;
}
#pragma vector=TIMER0_B0_VECTOR
__interrupt void TIMER0_B0(void)
{
    P1OUT ^= BIT0;
    TB0CTL=TBSSEL_1 + MC_1 + ID_3; //Makes Aclk in up mode with an 8 divider, off
    TB0CTL = TBCLR;
    P1IFG &= ~BIT1; //clears the flag
    P1IE |= BIT1; //enables the interrupt for p1.1
}
